{"version":3,"file":"index.cjs","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["export const createBasePath = (base?: string) => {\n  return (base?.replace(/\\/$/, '') || '') + '/@imagetools/'\n}\n","import { basename, extname } from 'node:path'\nimport { Plugin, ResolvedConfig } from 'vite'\nimport {\n  parseURL,\n  loadImage,\n  builtins,\n  resolveConfigs,\n  applyTransforms,\n  generateTransforms,\n  getMetadata,\n  generateImageID,\n  builtinOutputFormats,\n  urlFormat,\n  extractEntries,\n  Logger\n} from 'imagetools-core'\nimport { createFilter, dataToEsm } from '@rollup/pluginutils'\nimport { VitePluginOptions } from './types'\nimport { createBasePath } from './utils'\n\nconst defaultOptions: VitePluginOptions = {\n  include: ['**/*.{heic,heif,avif,jpeg,jpg,png,tiff,webp,gif}', '**/*.{heic,heif,avif,jpeg,jpg,png,tiff,webp,gif}?*'],\n  exclude: 'public/**/*',\n  removeMetadata: true\n}\n\nexport * from 'imagetools-core'\n\nexport function imagetools(userOptions: Partial<VitePluginOptions> = {}): Plugin {\n  const pluginOptions: VitePluginOptions = { ...defaultOptions, ...userOptions }\n\n  const filter = createFilter(pluginOptions.include, pluginOptions.exclude)\n\n  const transformFactories = pluginOptions.extendTransforms ? pluginOptions.extendTransforms(builtins) : builtins\n\n  const outputFormats = pluginOptions.extendOutputFormats\n    ? pluginOptions.extendOutputFormats(builtinOutputFormats)\n    : builtinOutputFormats\n\n  let viteConfig: ResolvedConfig\n  let basePath: string\n\n  const generatedImages = new Map()\n\n  return {\n    name: 'imagetools',\n    enforce: 'pre',\n    configResolved(cfg) {\n      viteConfig = cfg\n      basePath = createBasePath(viteConfig.base)\n    },\n    async load(id) {\n      if (!filter(id)) return null\n\n      const srcURL = parseURL(id)\n\n      let directives = srcURL.searchParams\n\n      if (typeof pluginOptions.defaultDirectives === 'function') {\n        directives = new URLSearchParams([...pluginOptions.defaultDirectives(srcURL), ...srcURL.searchParams])\n      } else if (pluginOptions.defaultDirectives) {\n        directives = new URLSearchParams([...pluginOptions.defaultDirectives, ...srcURL.searchParams])\n      }\n\n      if (!directives.toString()) return null\n\n      const parameters = extractEntries(directives)\n      const imageConfigs =\n        pluginOptions.resolveConfigs?.(parameters, outputFormats) ?? resolveConfigs(parameters, outputFormats)\n\n      const img = loadImage(decodeURIComponent(srcURL.pathname))\n\n      const outputMetadatas = []\n\n      const logger: Logger = {\n        info: (msg) => viteConfig.logger.info(msg),\n        warn: (msg) => this.warn(msg),\n        error: (msg) => this.error(msg)\n      }\n\n      for (const config of imageConfigs) {\n        const id = generateImageID(srcURL, config)\n\n        const { transforms } = generateTransforms(config, transformFactories, logger)\n        const { image, metadata } = await applyTransforms(transforms, img.clone(), pluginOptions.removeMetadata)\n\n        generatedImages.set(id, image)\n\n        if (!this.meta.watchMode) {\n          const fileName = basename(srcURL.pathname, extname(srcURL.pathname)) + `.${metadata.format}`\n\n          const fileHandle = this.emitFile({\n            name: fileName,\n            source: await image.toBuffer(),\n            type: 'asset'\n          })\n\n          metadata.src = `__VITE_ASSET__${fileHandle}__`\n        } else {\n          metadata.src = basePath + id\n        }\n\n        metadata.image = image\n\n        outputMetadatas.push(metadata)\n      }\n\n      let outputFormat = urlFormat()\n\n      for (const [key, format] of Object.entries(outputFormats)) {\n        if (directives.has(key)) {\n          const params = directives\n            .get(key)\n            ?.split(';')\n            .filter((v: string) => !!v)\n          outputFormat = format(params?.length ? params : undefined)\n          break\n        }\n      }\n\n      return dataToEsm(outputFormat(outputMetadatas), {\n        namedExports: viteConfig.json?.namedExports ?? true,\n        compact: !!viteConfig.build.minify ?? false,\n        preferConst: true\n      })\n    },\n\n    configureServer(server) {\n      server.middlewares.use((req, res, next) => {\n        if (req.url?.startsWith(basePath)) {\n          const [, id] = req.url.split(basePath)\n\n          const image = generatedImages.get(id)\n\n          if (!image)\n            throw new Error(`vite-imagetools cannot find image with id \"${id}\" this is likely an internal error`)\n\n          if (pluginOptions.removeMetadata === false) {\n            image.withMetadata()\n          }\n\n          res.setHeader('Content-Type', `image/${getMetadata(image, 'format')}`)\n          res.setHeader('Cache-Control', 'max-age=360000')\n          return image.clone().pipe(res)\n        }\n\n        next()\n      })\n    }\n  }\n}\n"],"names":["createFilter","builtins","builtinOutputFormats","parseURL","extractEntries","resolveConfigs","loadImage","generateImageID","generateTransforms","applyTransforms","basename","extname","urlFormat","dataToEsm","getMetadata"],"mappings":"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"}